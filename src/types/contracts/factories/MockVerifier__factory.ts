/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { MockVerifier, MockVerifierInterface } from "../MockVerifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddr_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class MockVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): MockVerifierInterface {
    return new utils.Interface(_abi) as MockVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockVerifier {
    return new Contract(address, _abi, signerOrProvider) as MockVerifier;
  }
}
